
Q.2 A) Generate a random array of 50 integers and display them using a line chart, scatter plot, histogram and box plot. Apply appropriate color, labels and styling options. 


import numpy as np

import matplotlib.pyplot as plt



# Generate a random array of 50 integers between 1 and 100

random_data = np.random.randint(1, 101, size=50)



# Set up the figure and subplots

plt.figure(figsize=(12, 10))



# Line Chart

plt.subplot(2, 2, 1)

plt.plot(random_data, color='blue', marker='o', linestyle='-', markersize=5)

plt.title('Line Chart', fontsize=14)

plt.xlabel('Index', fontsize=12)

plt.ylabel('Value', fontsize=12)

plt.grid(True)



# Scatter Plot

plt.subplot(2, 2, 2)

plt.scatter(range(len(random_data)), random_data, color='green', alpha=0.7)

plt.title('Scatter Plot', fontsize=14)

plt.xlabel('Index', fontsize=12)

plt.ylabel('Value', fontsize=12)



# Histogram

plt.subplot(2, 2, 3)

plt.hist(random_data, bins=10, color='orange', edgecolor='black', alpha=0.7)

plt.title('Histogram', fontsize=14)

plt.xlabel('Value', fontsize=12)

plt.ylabel('Frequency', fontsize=12)



# Box Plot

plt.subplot(2, 2, 4)

plt.boxplot(random_data, patch_artist=True, boxprops=dict(facecolor='lightblue'))

plt.title('Box Plot', fontsize=14)

plt.ylabel('Value', fontsize=12)



# Adjust layout to prevent overlap

plt.tight_layout()

plt.show()





Q.2 B) Write a Python program to create data frame containing column name, salary, department add 10 rows with some missing and duplicate values to the data frame. Also drop all null and empty values. Print the modified data frame.


import pandas as pd

import numpy as np



# Create a DataFrame with some missing and duplicate values

data = {

    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace', 'Hannah', 'Ivy', 'Ivy'],

    'Salary': [70000, 80000, np.nan, 50000, 60000, 90000, np.nan, 80000, 70000, 60000],

    'Department': ['HR', 'IT', 'Finance', 'IT', 'HR', 'Finance', 'IT', 'HR', None, 'Finance']

}



df = pd.DataFrame(data)



# Display the original DataFrame

print("Original DataFrame:")

print(df)



# Drop all null and empty values

df_cleaned = df.dropna()



# Display the modified DataFrame

print("\nModified DataFrame (after dropping null values):")

print(df_cleaned)



